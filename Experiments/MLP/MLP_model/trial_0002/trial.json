{"trial_id": "0002", "hyperparameters": {"space": [{"class_name": "Choice", "config": {"name": "activation", "default": "relu", "conditions": [], "values": ["relu", "tanh"], "ordered": false}}, {"class_name": "Int", "config": {"name": "input_layer", "default": null, "conditions": [], "min_value": 1, "max_value": 200, "step": 10, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_layer", "default": null, "conditions": [], "min_value": 0, "max_value": 8, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_neurons", "default": null, "conditions": [], "min_value": 1, "max_value": 200, "step": 10, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "optimiser", "default": "SGD", "conditions": [], "values": ["SGD", "Adam"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "values": [0.001, 0.005, 0.01, 0.05, 0.1], "ordered": true}}, {"class_name": "Choice", "config": {"name": "dropout", "default": 1, "conditions": [], "values": [1, 0], "ordered": true}}, {"class_name": "Choice", "config": {"name": "dropout_rate", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5], "ordered": true}}], "values": {"activation": "relu", "input_layer": 41, "dense_layer": 4, "dense_neurons": 181, "optimiser": "Adam", "learning_rate": 0.05, "dropout": 0, "dropout_rate": 0.5, "tuner/epochs": 2, "tuner/initial_epoch": 0, "tuner/bracket": 2, "tuner/round": 0}}, "metrics": {"metrics": {"loss": {"direction": "min", "observations": [{"value": [0.931555449962616], "step": 0}]}, "precision": {"direction": "min", "observations": [{"value": [0.0], "step": 0}]}, "recall": {"direction": "min", "observations": [{"value": [0.0], "step": 0}]}, "val_loss": {"direction": "min", "observations": [{"value": [0.24797198176383972], "step": 0}]}, "val_precision": {"direction": "min", "observations": [{"value": [0.0], "step": 0}]}, "val_recall": {"direction": "min", "observations": [{"value": [0.0], "step": 0}]}}}, "score": 0.0, "best_step": 0, "status": "COMPLETED", "message": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.10/dist-packages/keras_tuner/src/engine/base_tuner.py\", line 273, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/usr/local/lib/python3.10/dist-packages/keras_tuner/src/engine/base_tuner.py\", line 264, in _run_and_update_trial\n    tuner_utils.convert_to_metrics_dict(\n  File \"/usr/local/lib/python3.10/dist-packages/keras_tuner/src/engine/tuner_utils.py\", line 132, in convert_to_metrics_dict\n    [convert_to_metrics_dict(elem, objective) for elem in results]\n  File \"/usr/local/lib/python3.10/dist-packages/keras_tuner/src/engine/tuner_utils.py\", line 132, in <listcomp>\n    [convert_to_metrics_dict(elem, objective) for elem in results]\n  File \"/usr/local/lib/python3.10/dist-packages/keras_tuner/src/engine/tuner_utils.py\", line 145, in convert_to_metrics_dict\n    best_value, _ = _get_best_value_and_best_epoch_from_history(\n  File \"/usr/local/lib/python3.10/dist-packages/keras_tuner/src/engine/tuner_utils.py\", line 116, in _get_best_value_and_best_epoch_from_history\n    objective_value = objective.get_value(metrics)\n  File \"/usr/local/lib/python3.10/dist-packages/keras_tuner/src/engine/objective.py\", line 59, in get_value\n    return logs[self.name]\nKeyError: 'val_recall'\n"}